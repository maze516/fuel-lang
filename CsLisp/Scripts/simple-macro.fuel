(do


  (defn foreach (container fcn) 
     (do 
	   (def i 0)
	   (def max (len container))
	   (while (< i max)
	     (do 
		   (apply fcn (list (nth i container)))
		   (setf i (+ i 1))
		 )
	   )
	 )
  )

;;(defn tt (x) 
;;  (* x x)
;;)
  
;;(define-macro-expand create-fcn-test (a b c)
;;  (do 
;;    (def body '(* 2 ,c))
;;    (print "BODY:" body)
;;;    (print body)
;;;    (print "xxx:" '(+ 1 body))
;;    ;(def result '(defn ,a ,b (* 2 ,body)))
;;    ;(def result '(defn ,a ,b ,body))
;;    (def result '(+ 1 body))
;;    (print "RES:" result)
;;    (return result)
;;  )
;;)

(define-macro-expand create-fcn-x (a b c)
  (do 
    (def body c)
    (cons body x)
    (print body)
    ;(def result '(+ 1 body))
    ;(print "RES:" result)
    ;(return result)
  )
)

(define-macro-expand create-fcn (a b c)
  (do
      
(defn tt (x) 
  (* x x)
)

    (print 'a 'b 'c)
    (def d 'c)
    ;(setf d (cons d 'fx)
    (setf d (append d '(x)))
    (def t (tt 7))
;    (print "ssss" t)
;    (def tl '(t))
;;    (print "TTTESSSTT" tl)
    ;(setf d (append d '(,t)))
    (print "ddd" d)
    (return '(defn ,a ,b ,c))       ; TODO: warum geht sowohl ,c als auch c ? und ,d und d nicht ?
  )  
)

;(def f (create-fcn hello '(x) '(+ x x)))
;;(def f (create-fcn-org hello '(x) '(+ x x)))
;(print "===============" f)
;(print (hello 42))

(def lst '(1 2 3))
(def a 4)
(def b 5)
(def result '(a b lst))
(print result)
(def result2 '(,a ,b ,lst))
(print result2)
(def result3 '(a b lst))
(print result3)

)