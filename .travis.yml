# Enable C++ support

matrix:
  include:
    - os: linux
      language: cpp
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-precise-3.8
          packages:
          - clang-3.8
          - qt5-default
          - qttools5-dev-tools
      script:
      - ./build_cpp.sh
    
    - os: linux
      language: csharp
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-6
          - qt5-default
          - qttools5-dev-tools
      script:
      - ./build_cpp.sh
      - ./build_cs.sh
    
    - os: osx
      language: csharp
      compiler: clang
      script:
      - ./build_cpp.sh
      - ./build_cs.sh
  
    - os: windows
      language: cpp
      compiler: msc
      env:
      - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"      
      script:
      - export PATH=$MSBUILD_PATH:$PATH
      - ls -lrt /c
      - msbuild
  
before_install:
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update    ; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install qt; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH=/usr/local/opt/qt/bin:$PATH; fi
  
install:
- "[ $CXX = g++ ] && export CXX=g++-6 || true"
- "[ $CXX = clang++ ] && export CXX=clang++-3.8 || true"
  
# Build steps
#script:
  #- ./build_linux.sh
#  - echo "$CXX"
#  - echo "$TRAVIS_OS_NAME"
#  - ls -lrt
#  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then ./build_linux.sh    ; fi
  #- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then cl     ; fi
  #- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then csc     ; fi
  #- if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then msbuild     ; fi
#  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then choco install qtcreator     ; fi
#  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then qmake -v     ; fi
#  - ls -lrt
  #- cd ..
  #- cd ..
  #- ls -lrt
#  - cd CsLisp
#  - msbuild
#  - msbuild /p:Configuration=Release CsLisp.sln
#  - ls -lrt
#  - cd bin
#  - cd Release
#  - chmod +x fuel.exe
#  - ls -lrt
#  - mono fuel.exe -v
#  - mono fuel.exe -e "(println (platform))"
