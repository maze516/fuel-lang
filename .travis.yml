# Multi language build script for csharp and c++

matrix:
  include:
    - os: linux
      language: cpp
      compiler: clang
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          - llvm-toolchain-precise-3.8
          packages:
          - clang-3.8
          - qt5-default
          - qttools5-dev-tools
      script:
      - ./build_cpp.sh linux-clang
      - ls -lrt
    
    - os: linux
      language: cpp
      compiler: gcc
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-6
          - qt5-default
          - qttools5-dev-tools
      script:
      - ./build_cpp.sh linux-gcc
      - ls -lrt
    
    - os: linux
      language: cpp
      compiler: gcc/cmake
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
          packages:
          - g++-6
      script:
      - cd CppLisp
      - cmake --version
      - cmake CMakeLists.txt
      - make -j 4
      - export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:./CppLispInterpreter:./CppLispDebugger
      - ./fuel -v
      - ./fuel -e "(println (platform))"
      - ./fuel
      - ls -lrt
    
    - os: linux
      language: csharp
      compiler: mono
      addons:
        apt:
          sources:
          - ubuntu-toolchain-r-test
      script:
      - ./build_cs.sh
      - ls -lrt
    
    - os: linux
      language: android
      compiler: gcc/cmake
      addons:
        apt:
          packages:
          - cmake
          - cmake-data
      android:
        components:
            - build-tools-26.0.2
            - android-26
      before_install:
        #- export WORKING_DIR=`pwd`
        #- rm -fr $WORKING_DIR/android-ndk-r16b
        #- curl -L http://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -O
        #- unzip -oq android-ndk-r16b-linux-x86_64.zip
        #- rm android-ndk-r16b-linux-x86_64.zip
        - curl -L https://github.com/Kitware/CMake/releases/download/v3.13.4/cmake-3.13.4.tar.gz -O
        - tar -xvzf cmake-3.13.4.tar.gz
        - ls -lrt
        - cd cmake-3.13.4
        - ./configure
        - make -j 8
        - sudo apt remove cmake
        - sudo apt remove cmake-data
        - sudo make install
        - export PATH=$PATH:/usr/local/bin
        - cd ..
        #- export ANDROID_NDK_HOME=$WORKING_DIR/android-ndk-r16b
        #- export ANDROID_NDK=$WORKING_DIR/android-ndk-r16b
        #- export PATH=$PATH:${ANDROID_NDK_HOME}
        - echo y | sdkmanager "ndk-bundle"
        - echo y | sdkmanager "cmake;3.6.4111459"
        - echo y | sdkmanager "lldb;3.1"
      before_script:
        - export ANDROID_NDK_HOME=$ANDROID_HOME/ndk-bundle
      script:
      - cd CppLisp
      - echo $ANDROID_NDK_HOME
      - ls -lrt $ANDROID_NDK_HOME
      # build version for arm
      - ./build_for_android.sh $ANDROID_NDK_HOME armeabi-v7a
      - ls -lrt
      - ls -lrt CppLisp
      # build version for x86
      - make clean
      - ./build_for_android.sh $ANDROID_NDK_HOME x86
      - ls -lrt
      - ls -lrt CppLisp      
    
    - os: osx
      language: cpp
      compiler: clang
      before_install:
      - brew update
      - brew install qt
      - export PATH=/usr/local/opt/qt/bin:$PATH
      script:
      - ./build_cpp.sh mac-clang
      - ls -lrt
  
    - os: osx
      language: csharp
      compiler: mono
      script:
      - ./build_cs.sh
      - ls -lrt
  
    - os: windows
      language: cpp
      compiler: cl
      env:
      - MSBUILD_PATH="c:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin"      
      script:
      - export PATH=$MSBUILD_PATH:$PATH
      - cd CppLisp
      #- MsBuild.exe /property:Configuration="Debug" /property:ExcludeFromBuild=Test CppLisp.sln 
      #- MsBuild.exe /property:Configuration="Release" /property:ExcludeFromBuild=Test CppLisp.sln 
      - MsBuild.exe /property:Configuration="ContinousIntgration" CppLisp.sln       
      - cd x64
      - cd ContinousIntgration
      - ./fuel.exe -v
      - ./fuel  -e "(println (platform))"
      - dir
  
install:
- "[ $CXX = g++ ] && export CXX=g++-6 || true"
- "[ $CXX = clang++ ] && export CXX=clang++-3.8 || true"
